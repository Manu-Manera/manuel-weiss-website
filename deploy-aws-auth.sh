#!/bin/bash

# AWS Cognito Authentication Deployment Script
# Dieses Script deployt die AWS-Infrastruktur für die Authentifizierung

set -e

echo "🚀 Starting AWS Cognito Authentication Deployment..."

# Prüfen ob AWS CLI installiert ist
if ! command -v aws &> /dev/null; then
    echo "❌ AWS CLI ist nicht installiert. Bitte installieren Sie AWS CLI."
    exit 1
fi

# Prüfen ob CDK installiert ist
if ! command -v cdk &> /dev/null; then
    echo "❌ AWS CDK ist nicht installiert. Bitte installieren Sie AWS CDK."
    exit 1
fi

# AWS Credentials prüfen
echo "🔐 Checking AWS credentials..."
if ! aws sts get-caller-identity &> /dev/null; then
    echo "❌ AWS Credentials nicht konfiguriert. Bitte führen Sie 'aws configure' aus."
    exit 1
fi

echo "✅ AWS Credentials gefunden"

# CDK Bootstrap prüfen
echo "📦 Checking CDK Bootstrap..."
if ! aws cloudformation describe-stacks --stack-name CDKToolkit &> /dev/null; then
    echo "🔧 CDK Bootstrap wird durchgeführt..."
    cdk bootstrap
fi

# Dependencies installieren
echo "📦 Installing dependencies..."
npm install

# CDK Stack deployen
echo "🚀 Deploying CDK Stack..."
cdk deploy --require-approval never

# Stack Outputs abrufen
echo "📋 Retrieving stack outputs..."
STACK_NAME="ManuelWeissWebsiteStack"
USER_POOL_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`UserPoolId`].OutputValue' --output text)
USER_POOL_CLIENT_ID=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`UserPoolClientId`].OutputValue' --output text)
REGION=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`Region`].OutputValue' --output text)

echo "✅ Deployment erfolgreich!"
echo ""
echo "📋 AWS Cognito Configuration:"
echo "User Pool ID: $USER_POOL_ID"
echo "User Pool Client ID: $USER_POOL_CLIENT_ID"
echo "Region: $REGION"
echo ""

# Konfigurationsdatei erstellen
echo "📝 Creating configuration file..."
cat > aws-cognito-config.js << EOF
// AWS Cognito Configuration
// Automatically generated by deployment script

window.AWS_COGNITO_CONFIG = {
    userPoolId: '$USER_POOL_ID',
    clientId: '$USER_POOL_CLIENT_ID',
    region: '$REGION'
};

// Update aws-auth.js with actual values
if (typeof window.awsAuth !== 'undefined') {
    window.awsAuth.userPoolId = '$USER_POOL_ID';
    window.awsAuth.clientId = '$USER_POOL_CLIENT_ID';
    window.awsAuth.region = '$REGION';
}
EOF

echo "📝 Configuration file created: aws-cognito-config.js"
echo ""

# Test-User erstellen (optional)
read -p "🤔 Möchten Sie einen Test-User erstellen? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "👤 Creating test user..."
    read -p "E-Mail für Test-User: " TEST_EMAIL
    read -p "Passwort für Test-User: " -s TEST_PASSWORD
    echo
    
    aws cognito-idp admin-create-user \
        --user-pool-id $USER_POOL_ID \
        --username $TEST_EMAIL \
        --user-attributes Name=email,Value=$TEST_EMAIL Name=email_verified,Value=true \
        --temporary-password $TEST_PASSWORD \
        --message-action SUPPRESS
    
    echo "✅ Test-User erstellt: $TEST_EMAIL"
    echo "🔑 Temporäres Passwort: $TEST_PASSWORD"
fi

echo ""
echo "🎉 AWS Cognito Authentication Setup abgeschlossen!"
echo ""
echo "📚 Nächste Schritte:"
echo "1. Fügen Sie aws-cognito-config.js zu Ihren HTML-Seiten hinzu"
echo "2. Testen Sie die Anmeldung auf der Website"
echo "3. Konfigurieren Sie E-Mail-Versand für Produktionsumgebung"
echo ""
echo "🔗 Nützliche Links:"
echo "- AWS Cognito Console: https://console.aws.amazon.com/cognito/"
echo "- CloudFormation Console: https://console.aws.amazon.com/cloudformation/"
echo ""
