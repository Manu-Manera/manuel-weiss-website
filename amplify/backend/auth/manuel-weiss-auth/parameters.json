{
  "identityPoolName": "manuel_weiss_identitypool_038333965110",
  "allowUnauthenticatedIdentities": false,
  "resourceNameTruncated": "manuelweiss038333965110",
  "userPoolName": "manuel-weiss-userfiles-users",
  "autoVerifiedAttributes": [
    "email"
  ],
  "mfaConfiguration": "OFF",
  "mfaTypes": [
    "SMS Text Message"
  ],
  "smsAuthenticationMessage": "Your authentication code is {####}",
  "smsVerificationMessage": "Your verification code is {####}",
  "emailVerificationSubject": "Your verification code",
  "emailVerificationMessage": "Your verification code is {####}",
  "defaultPasswordPolicy": false,
  "passwordPolicyMinLength": 8,
  "passwordPolicyCharacters": [
    "Requires Lowercase",
    "Requires Uppercase", 
    "Requires Numbers"
  ],
  "requiredAttributes": [
    "email"
  ],
  "userpoolClientGenerateSecret": false,
  "userpoolClientRefreshTokenValidity": 30,
  "userpoolClientWriteAttributes": [
    "email"
  ],
  "userpoolClientReadAttributes": [
    "email"
  ],
  "userpoolClientLambdaTriggers": [],
  "userpoolClientSetAttributes": false,
  "sharedId": "038333965110",
  "resourceName": "manuelweissauth",
  "authSelections": "identityPoolAndUserPool",
  "useDefault": "manual",
  "usernameAttributes": [
    "email"
  ],
  "userPoolGroups": false,
  "userPoolGroupList": [],
  "adminQueries": false,
  "triggers": {},
  "hostedUI": true,
  "hostedUIDomainName": "manuel-weiss-userfiles-auth-038333965110",
  "authProvidersUserPool": [],
  "hostedUIProviderMeta": [],
  "oAuthMetadata": {
    "AllowedOAuthFlows": [
      "code"
    ],
    "AllowedOAuthScopes": [
      "phone",
      "email", 
      "openid",
      "profile",
      "aws.cognito.signin.user.admin"
    ],
    "CallbackURLs": [
      "https://main.d1234567890.amplifyapp.com/",
      "https://manuel-weiss.com/",
      "http://localhost:8000/"
    ],
    "LogoutURLs": [
      "https://main.d1234567890.amplifyapp.com/",
      "https://manuel-weiss.com/",
      "http://localhost:8000/"
    ]
  },
  "authRoleArn": {
    "Fn::GetAtt": [
      "AuthRole",
      "Arn"
    ]
  },
  "unauthRoleArn": {
    "Fn::GetAtt": [
      "UnauthRole", 
      "Arn"
    ]
  },
  "breakCircularDependency": true,
  "dependsOn": []
}
