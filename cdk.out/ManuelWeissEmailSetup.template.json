{
 "Resources": {
  "EmailHostedZoneBA66C4A6": {
   "Type": "AWS::Route53::HostedZone",
   "Properties": {
    "HostedZoneConfig": {
     "Comment": "Hosted zone for manuel-weiss.ch email setup"
    },
    "Name": "manuel-weiss.ch."
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailHostedZone/Resource"
   }
  },
  "DomainIdentity034B48F5": {
   "Type": "AWS::SES::EmailIdentity",
   "Properties": {
    "EmailIdentity": "manuel-weiss.ch",
    "MailFromAttributes": {
     "MailFromDomain": "mail.manuel-weiss.ch"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/DomainIdentity/Resource"
   }
  },
  "EmailIdentity7187767D": {
   "Type": "AWS::SES::EmailIdentity",
   "Properties": {
    "EmailIdentity": "mail@manuel-weiss.ch"
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailIdentity/Resource"
   }
  },
  "EmailBucket843A740F": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "manu-email-storage-038333965110",
    "LifecycleConfiguration": {
     "Rules": [
      {
       "ExpirationInDays": 90,
       "Id": "DeleteOldEmails",
       "Status": "Enabled"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailBucket/Resource"
   }
  },
  "EmailBucketPolicyBBC68546": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "EmailBucket843A740F"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutObject",
       "Condition": {
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "ses.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "EmailBucket843A740F",
            "Arn"
           ]
          },
          "/emails/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailBucket/Policy/Resource"
   }
  },
  "EmailProcessorServiceRole637381CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailProcessor/ServiceRole/Resource"
   }
  },
  "EmailProcessorServiceRoleDefaultPolicy0B15DAB8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "EmailBucket843A740F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "EmailBucket843A740F",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EmailProcessorServiceRoleDefaultPolicy0B15DAB8",
    "Roles": [
     {
      "Ref": "EmailProcessorServiceRole637381CE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailProcessor/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EmailProcessor218EC076": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\n        const AWS = require('aws-sdk');\n        const ses = new AWS.SES();\n        const s3 = new AWS.S3();\n\n        exports.handler = async (event) => {\n          console.log('E-Mail verarbeitet:', JSON.stringify(event, null, 2));\n          \n          // Hier kannst du E-Mail-Logik hinzufÃ¼gen:\n          // - Weiterleitung an andere Adressen\n          // - Automatische Antworten\n          // - Spam-Filterung\n          // - etc.\n          \n          return {\n            statusCode: 200,\n            body: 'E-Mail erfolgreich verarbeitet'\n          };\n        };\n      "
    },
    "Environment": {
     "Variables": {
      "EMAIL_BUCKET": {
       "Ref": "EmailBucket843A740F"
      },
      "DOMAIN_NAME": "manuel-weiss.ch"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "EmailProcessorServiceRole637381CE",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "EmailProcessorServiceRoleDefaultPolicy0B15DAB8",
    "EmailProcessorServiceRole637381CE"
   ],
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailProcessor/Resource"
   }
  },
  "EmailProcessorAllowSes1CEA4B96": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EmailProcessor218EC076",
      "Arn"
     ]
    },
    "Principal": "ses.amazonaws.com",
    "SourceAccount": {
     "Ref": "AWS::AccountId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/EmailProcessor/AllowSes"
   }
  },
  "ReceiptRuleSetD3CCC994": {
   "Type": "AWS::SES::ReceiptRuleSet",
   "Properties": {
    "RuleSetName": "manu-email-rules"
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/ReceiptRuleSet/Resource"
   }
  },
  "ReceiptRuleSetIncomingEmailRule657D93E2": {
   "Type": "AWS::SES::ReceiptRule",
   "Properties": {
    "Rule": {
     "Actions": [
      {
       "S3Action": {
        "BucketName": {
         "Ref": "EmailBucket843A740F"
        },
        "ObjectKeyPrefix": "emails/"
       }
      },
      {
       "LambdaAction": {
        "FunctionArn": {
         "Fn::GetAtt": [
          "EmailProcessor218EC076",
          "Arn"
         ]
        }
       }
      }
     ],
     "Enabled": true,
     "Recipients": [
      "manuel-weiss.ch"
     ]
    },
    "RuleSetName": {
     "Ref": "ReceiptRuleSetD3CCC994"
    }
   },
   "DependsOn": [
    "EmailBucketPolicyBBC68546",
    "EmailProcessorAllowSes1CEA4B96"
   ],
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/ReceiptRuleSet/IncomingEmailRule/Resource"
   }
  },
  "SPFRecord01D5BF48": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "HostedZoneId": {
     "Ref": "EmailHostedZoneBA66C4A6"
    },
    "Name": "manuel-weiss.ch.",
    "ResourceRecords": [
     "\"v=spf1 include:amazonses.com ~all\""
    ],
    "TTL": "1800",
    "Type": "TXT"
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/SPFRecord/Resource"
   }
  },
  "DMARCRecord41706BA3": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "HostedZoneId": {
     "Ref": "EmailHostedZoneBA66C4A6"
    },
    "Name": "_dmarc.manuel-weiss.ch.",
    "ResourceRecords": [
     "\"v=DMARC1; p=quarantine; rua=mailto:dmarc@manu.ch\""
    ],
    "TTL": "1800",
    "Type": "TXT"
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/DMARCRecord/Resource"
   }
  },
  "MXRecord3FB0AC94": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "HostedZoneId": {
     "Ref": "EmailHostedZoneBA66C4A6"
    },
    "Name": "manuel-weiss.ch.",
    "ResourceRecords": [
     "10 inbound-smtp.eu-central-1.amazonaws.com"
    ],
    "TTL": "1800",
    "Type": "MX"
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/MXRecord/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11Qy04DMQz8Fu7ZACn8AAhUDqjVlhMXlCZGcjePKnGgVZR/JyErdeHkmcl4bEdwIW75zZX8joPS02Bwz/OOpJpYlT5y8IngfsXz2kcC/e4dsMdPt2BvJxpB+aCb3tEOiL2eOi4sQuT5yUo0LxocIZ2b869QvYBHGpOB1tyTlsqC/nutA+p6D0lNvXFGvWy9QXW+yJ0XZqTda8nzc3KK0LvmWOItBIsxVlYYSsvz6OfBrV5S57xS94s+BfXr2SQ6JirMeQ38EK+/xB0X9Y8PEXEIqV5sgY+9/gDHHbSygAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ManuelWeissEmailSetup/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "DomainName": {
   "Description": "Domain name for email setup",
   "Value": "manuel-weiss.ch"
  },
  "EmailAddress": {
   "Description": "Primary email address",
   "Value": "mail@manuel-weiss.ch"
  },
  "EmailBucketName": {
   "Description": "S3 bucket for incoming emails",
   "Value": {
    "Ref": "EmailBucket843A740F"
   }
  },
  "HostedZoneId": {
   "Description": "Route 53 Hosted Zone ID",
   "Value": {
    "Ref": "EmailHostedZoneBA66C4A6"
   }
  },
  "DKIMInstructions": {
   "Description": "Instructions for DKIM setup",
   "Value": "Go to SES Console > Identities > Domain > DKIM to get DKIM tokens"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}