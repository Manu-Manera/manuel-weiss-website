// =================== AI INTEGRATION MODULE ===================
// KI-Features und DACH-Templates f√ºr den modularen Workflow
// Nutzt bestehende Admin Panel API Key Verwaltung

/**
 * AI INTEGRATION
 * - OpenAI GPT-4 Integration √ºber Admin Panel API Keys
 * - DACH-spezifische Templates
 * - Anforderungsmanagement
 * - KI-basierte Textgenerierung
 */

// =================== API KEY MANAGEMENT ===================
// Nutzt bestehende Admin Panel Verwaltung (KI-Einstellungen)
// Siehe: https://mawps.netlify.app/admin#ai-settings

/**
 * Get API Key from existing Admin Panel system (ECHTE Integration - KEIN FALLBACK)
 */
function getAdminPanelApiKey() {
    // ECHTE Implementation - direkt aus localStorage wie Admin Panel es speichert
    const apiKey = localStorage.getItem('openai_api_key');
    
    if (!apiKey) {
        console.error('‚ùå KRITISCH: Kein API Key gefunden in localStorage');
        console.error('üëâ Admin Panel Key Status:', !!localStorage.getItem('openai_api_key'));
        console.error('üëâ localStorage Keys:', Object.keys(localStorage));
        throw new Error('API Key nicht verf√ºgbar. Admin Panel Konfiguration erforderlich.');
    }
    
    if (!apiKey.startsWith('sk-')) {
        console.error('‚ùå KRITISCH: API Key Format ung√ºltig:', apiKey.substring(0, 10) + '...');
        throw new Error('API Key Format ung√ºltig. Muss mit "sk-" beginnen.');
    }
    
    console.log('‚úÖ API Key erfolgreich geladen:', apiKey.substring(0, 10) + '...');
    return apiKey;
}

/**
 * Validate API Key format
 */
function validateApiKey(apiKey) {
    if (!apiKey) return false;
    
    // OpenAI API Keys beginnen mit 'sk-'
    if (!apiKey.startsWith('sk-')) {
        console.error('‚ùå Ung√ºltiges API Key Format');
        return false;
    }
    
    return true;
}

// =================== AI SERVICE INTEGRATION ===================

/**
 * AI Analysis Service - nutzt Admin Panel API Key
 */
window.startAdvancedAnalysis = function(mode = 'ai-full') {
    console.log('ü§ñ Starte KI-Analyse mit Admin Panel API Key...', mode);
    
    const apiKey = getAdminPanelApiKey();
    
    if (!apiKey) {
        alert('‚ö†Ô∏è Kein API Key konfiguriert!\n\nBitte gehen Sie zum Admin Panel (KI-Einstellungen) und konfigurieren Sie Ihren OpenAI API Key.');
        return false;
    }
    
    if (!validateApiKey(apiKey)) {
        alert('‚ùå Ung√ºltiger API Key!\n\nBitte √ºberpr√ºfen Sie Ihren API Key im Admin Panel.');
        return false;
    }
    
    // Delegiere an die RealAIAnalyzer Klasse (falls verf√ºgbar)
    if (window.realAI && typeof window.realAI.analyzeJobDescription === 'function') {
        return window.realAI.analyzeJobDescription(
            window.workflowData?.jobDescription || '',
            window.workflowData?.company || '',
            window.workflowData?.position || ''
        );
    } else {
        console.error('‚ùå RealAIAnalyzer nicht verf√ºgbar');
        alert('‚ùå KI-Analyzer nicht verf√ºgbar. Bitte laden Sie die Seite neu.');
        return false;
    }
};

/**
 * Test API Key availability (Moderne Integration mit Diagnostics)
 */
window.testAdminApiKey = function() {
    console.log('üß™ Admin Panel API Key Test (Moderne Integration)');
    
    if (window.adminPanelIntegration) {
        const diagnostics = window.adminPanelIntegration.getDiagnostics();
        console.table(diagnostics);
        
        const apiKey = window.adminPanelIntegration.getApiKey();
        const isValid = validateApiKey(apiKey);
        
        console.log('üìä Test-Ergebnis:');
        console.log('   Integration aktiv: ‚úÖ');
        console.log('   API Key verf√ºgbar:', diagnostics.apiKeyAvailable ? '‚úÖ' : '‚ùå');
        console.log('   Format valid:', isValid ? '‚úÖ' : '‚ùå');
        console.log('   Monitoring aktiv: ‚úÖ');
        
        return diagnostics.apiKeyAvailable && isValid;
    } else {
        // Fallback Test
        const apiKey = getAdminPanelApiKey();
        const isValid = validateApiKey(apiKey);
        
        console.log('üîÑ Fallback Test:');
        console.log('   Verf√ºgbar:', !!apiKey);
        console.log('   Valid Format:', isValid);
        console.log('   L√§nge:', apiKey ? apiKey.length : 0);
        console.log('   Prefix:', apiKey ? apiKey.substring(0, 10) + '...' : 'N/A');
        console.warn('‚ö†Ô∏è Admin Panel Integration nicht verf√ºgbar - Fallback verwendet');
        
        return !!apiKey && isValid;
    }
};

// =================== DEVELOPMENT/TEST FUNCTIONS ===================

/**
 * Set test API key - VERALTET (Verwenden Sie das Admin Panel!)
 */
window.setTestApiKeyForDevelopment = function() {
    console.warn('‚ö†Ô∏è VERALTETE FUNKTION - Verwenden Sie das Admin Panel!');
    console.log('üëâ Automatische Admin Panel Integration ist jetzt aktiv');
    console.log('üëâ Gehen Sie zu: admin.html#ai-settings');
    
    const useAdminPanel = confirm('Diese Funktion ist veraltet!\n\nDas neue Admin Panel Integration System ist aktiv und eliminiert manuelle API Key Eingaben.\n\nM√∂chten Sie das Admin Panel √∂ffnen?');
    
    if (useAdminPanel) {
        window.open('admin.html#ai-settings', '_blank');
        return true;
    }
    
    const forceDebug = confirm('Trotzdem Debug-Modus f√ºr Tests verwenden?\n(Nicht empfohlen - verwenden Sie das Admin Panel)');
    
    if (forceDebug) {
        const testApiKey = prompt('üß™ Debug API Key eingeben:');
        
        if (!testApiKey || !testApiKey.startsWith('sk-')) {
            console.log('‚ùå Ung√ºltiger API Key oder Eingabe abgebrochen');
            return false;
        }
        
        console.log('üß™ Debug API Key gesetzt (verwenden Sie in Zukunft das Admin Panel)');
        localStorage.setItem('openai_api_key', testApiKey);
        
        // Update Admin Panel Integration if available
        if (window.adminPanelIntegration) {
            window.adminPanelIntegration.checkApiKey();
        }
        
        return true;
    }
    
    console.log('üí° Verwenden Sie das Admin Panel f√ºr sichere API Key Verwaltung');
    return false;
};

console.log('‚úÖ AI Integration Module geladen (mit Admin Panel Integration)');
